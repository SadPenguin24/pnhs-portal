{"version":3,"file":"main.js","mappings":"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","sources":["webpack://pnhs-portal/./apps/api/src/app/app.module.ts","webpack://pnhs-portal/./apps/api/src/app/auth/auth.controller.ts","webpack://pnhs-portal/./apps/api/src/app/auth/auth.module.ts","webpack://pnhs-portal/./apps/api/src/app/auth/auth.service.ts","webpack://pnhs-portal/./apps/api/src/app/auth/constants.ts","webpack://pnhs-portal/./apps/api/src/app/auth/jwt-auth.guard.ts","webpack://pnhs-portal/./apps/api/src/app/auth/jwt.strategy.ts","webpack://pnhs-portal/./apps/api/src/app/auth/local-auth.guard.ts","webpack://pnhs-portal/./apps/api/src/app/auth/local.strategy.ts","webpack://pnhs-portal/./apps/api/src/app/enrollees/enrollees.controller.ts","webpack://pnhs-portal/./apps/api/src/app/enrollees/enrollees.module.ts","webpack://pnhs-portal/./apps/api/src/app/enrollees/enrollees.schema.ts","webpack://pnhs-portal/./apps/api/src/app/enrollees/enrollees.service.ts","webpack://pnhs-portal/./apps/api/src/app/roles/role.enum.ts","webpack://pnhs-portal/./apps/api/src/app/roles/roles.decorator.ts","webpack://pnhs-portal/./apps/api/src/app/roles/roles.guard.ts","webpack://pnhs-portal/./apps/api/src/app/schema/faculty.schema.ts","webpack://pnhs-portal/./apps/api/src/app/schema/profile.ts","webpack://pnhs-portal/./apps/api/src/app/schema/section.schema.ts","webpack://pnhs-portal/./apps/api/src/app/schema/student.schema.ts","webpack://pnhs-portal/./apps/api/src/app/schema/subject.schema.ts","webpack://pnhs-portal/./apps/api/src/app/section/section.controller.ts","webpack://pnhs-portal/./apps/api/src/app/section/section.module.ts","webpack://pnhs-portal/./apps/api/src/app/section/section.service.ts","webpack://pnhs-portal/./apps/api/src/app/subjects/subject.controller.ts","webpack://pnhs-portal/./apps/api/src/app/subjects/subject.module.ts","webpack://pnhs-portal/./apps/api/src/app/subjects/subject.service.ts","webpack://pnhs-portal/./apps/api/src/app/users/user.schema.ts","webpack://pnhs-portal/./apps/api/src/app/users/users.controller.ts","webpack://pnhs-portal/./apps/api/src/app/users/users.module.ts","webpack://pnhs-portal/./apps/api/src/app/users/users.service.ts","webpack://pnhs-portal/external commonjs \"@nestjs/common\"","webpack://pnhs-portal/external commonjs \"@nestjs/core\"","webpack://pnhs-portal/external commonjs \"@nestjs/jwt\"","webpack://pnhs-portal/external commonjs \"@nestjs/mongoose\"","webpack://pnhs-portal/external commonjs \"@nestjs/passport\"","webpack://pnhs-portal/external commonjs \"@nestjs/serve-static\"","webpack://pnhs-portal/external commonjs \"bcrypt\"","webpack://pnhs-portal/external commonjs \"body-parser\"","webpack://pnhs-portal/external commonjs \"mongoose\"","webpack://pnhs-portal/external commonjs \"passport-jwt\"","webpack://pnhs-portal/external commonjs \"passport-local\"","webpack://pnhs-portal/external commonjs \"tslib\"","webpack://pnhs-portal/external node-commonjs \"path\"","webpack://pnhs-portal/webpack/bootstrap","webpack://pnhs-portal/./apps/api/src/main.ts"],"sourcesContent":["import { Module } from '@nestjs/common';\r\n\r\nimport { MongooseModule } from '@nestjs/mongoose';\r\nimport { join } from 'path';\r\nimport { ServeStaticModule } from '@nestjs/serve-static';\r\n\r\n//modules\r\nimport { AuthModule } from './auth/auth.module';\r\nimport { EnrolleeModule } from './enrollees/enrollees.module';\r\nimport { SectionModule } from './section/section.module';\r\nimport { SubjectModule } from './subjects/subject.module';\r\nimport { UsersModule } from './users/users.module';\r\n\r\n@Module({\r\n  imports: [\r\n    ServeStaticModule.forRoot({\r\n      rootPath: join(__dirname, '../../../../', 'dist/apps/frontend'),\r\n    }),\r\n    MongooseModule.forRootAsync({\r\n      useFactory: async () => ({\r\n        uri: process.env.MONGO_URI,\r\n      }),\r\n    }),\r\n    AuthModule,\r\n    UsersModule,\r\n    SectionModule,\r\n    SubjectModule,\r\n    EnrolleeModule,\r\n  ],\r\n})\r\nexport class AppModule {}\r\n","import {\r\n  Controller,\r\n  Post,\r\n  UseGuards,\r\n  Request,\r\n  Response,\r\n  Body,\r\n} from '@nestjs/common';\r\nimport { AuthService } from './auth.service';\r\nimport { LocalAuthGuard } from './local-auth.guard';\r\n\r\n@Controller('auth')\r\nexport class AuthController {\r\n  constructor(private authService: AuthService) {}\r\n\r\n  @UseGuards(LocalAuthGuard)\r\n  @Post('/login')\r\n  async login(@Request() req) {\r\n    return this.authService.login(req.user);\r\n  }\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { AuthService } from './auth.service';\r\nimport { UsersModule } from '../users/users.module';\r\nimport { PassportModule } from '@nestjs/passport';\r\nimport { LocalStrategy } from './local.strategy';\r\nimport { AuthController } from './auth.controller';\r\nimport { JwtModule } from '@nestjs/jwt';\r\nimport { jwtConstants } from './constants';\r\nimport { JwtStrategy } from './jwt.strategy';\r\nimport { MongooseModule } from '@nestjs/mongoose';\r\nimport { UserSchema } from '../users/user.schema';\r\n\r\n@Module({\r\n  imports: [\r\n    UsersModule,\r\n    PassportModule,\r\n    JwtModule.register({\r\n      secret: jwtConstants.secret,\r\n      signOptions: { expiresIn: '10m' },\r\n    }),\r\n    MongooseModule.forFeature([{ name: 'users', schema: UserSchema }]),\r\n  ],\r\n  providers: [AuthService, LocalStrategy, JwtStrategy],\r\n  exports: [AuthService],\r\n  controllers: [AuthController],\r\n})\r\nexport class AuthModule {}\r\n","import { Injectable, NotAcceptableException } from '@nestjs/common';\r\nimport { UsersService } from '../users/users.service';\r\nimport { JwtService } from '@nestjs/jwt';\r\nimport { setCookie } from 'cookies-next';\r\n\r\nimport * as bcrypt from 'bcrypt';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  constructor(\r\n    private readonly usersService: UsersService,\r\n    private jwtService: JwtService\r\n  ) {}\r\n\r\n  async validateUser(username: string, password: string): Promise<any> {\r\n    const user = await this.usersService.getUser(username);\r\n\r\n    if (!user) return null;\r\n\r\n    const passwordValid = await bcrypt.compare(password, user.password);\r\n\r\n    if (!user) {\r\n      throw new NotAcceptableException('could not find the user');\r\n    }\r\n\r\n    if (user && passwordValid) {\r\n      return user;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  async login(user: any) {\r\n    const payload = {\r\n      username: user.email,\r\n      sub: user._id,\r\n      role: user.role,\r\n    };\r\n\r\n    const access_token = this.jwtService.sign(payload);\r\n    const fUser = await this.usersService.getUserById(user._id);\r\n\r\n    return {\r\n      user: fUser,\r\n      access_token: access_token,\r\n    };\r\n  }\r\n}\r\n","export const jwtConstants = {\r\n  secret: process.env.SECRET_KEY,\r\n};\r\n","import { Injectable } from '@nestjs/common';\r\nimport { AuthGuard } from '@nestjs/passport';\r\n\r\n@Injectable()\r\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\r\n","import { ExtractJwt, Strategy } from 'passport-jwt';\r\nimport { PassportStrategy } from '@nestjs/passport';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { jwtConstants } from './constants';\r\n\r\n@Injectable()\r\nexport class JwtStrategy extends PassportStrategy(Strategy) {\r\n  constructor() {\r\n    super({\r\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\r\n      ignoreExpiration: false,\r\n      secretOrKey: jwtConstants.secret,\r\n    });\r\n  }\r\n\r\n  async validate(payload: any) {\r\n    return {\r\n      _id: payload.sub,\r\n      username: payload.username,\r\n      role: payload.role,\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@nestjs/common';\r\nimport { AuthGuard } from '@nestjs/passport';\r\n\r\n@Injectable()\r\nexport class LocalAuthGuard extends AuthGuard('local') {}\r\n","import { Strategy } from 'passport-local';\r\nimport { PassportStrategy } from '@nestjs/passport';\r\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class LocalStrategy extends PassportStrategy(Strategy) {\r\n  constructor(private authService: AuthService) {\r\n    super({\r\n      usernameField: 'email',\r\n      passwordField: 'password',\r\n    });\r\n  }\r\n\r\n  async validate(username: string, password: string): Promise<unknown> {\r\n    const user = await this.authService.validateUser(username, password);\r\n    if (!user) {\r\n      throw new UnauthorizedException();\r\n    }\r\n    return user;\r\n  }\r\n}\r\n","import { Body, Post, Controller, Param, Get } from '@nestjs/common';\r\nimport { UseGuards } from '@nestjs/common';\r\nimport { JwtAuthGuard } from '../auth/jwt-auth.guard';\r\nimport { Roles } from '../roles/roles.decorator';\r\nimport { Role } from '../roles/role.enum';\r\nimport { RolesGuard } from '../roles/roles.guard';\r\nimport { EnrolleeService } from './enrollees.service';\r\n\r\n@Controller('enrollee')\r\nexport class EnrolleeController {\r\n  constructor(private enrolleeService: EnrolleeService) {}\r\n\r\n  @Post('create')\r\n  createEnrollee(@Body() body) {\r\n    return this.enrolleeService.createEnrollee(body);\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard, RolesGuard)\r\n  @Roles(Role.Admin, Role.Faculty)\r\n  @Get('/')\r\n  getEnrollees() {\r\n    return this.enrolleeService.getEnrollees();\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard, RolesGuard)\r\n  @Roles(Role.Admin, Role.Faculty)\r\n  @Get('/:id')\r\n  getEnrolleeById(@Param() param) {\r\n    return this.enrolleeService.getEnrolleeById(param.id);\r\n  }\r\n}\r\n","import { Module, forwardRef } from '@nestjs/common';\r\nimport { LocalStrategy } from '../auth/local.strategy';\r\nimport { JwtStrategy } from '../auth/jwt.strategy';\r\nimport { AuthModule } from '../auth/auth.module';\r\nimport { PassportModule } from '@nestjs/passport';\r\nimport { MongooseModule } from '@nestjs/mongoose';\r\nimport { UserSchema } from '../users/user.schema';\r\nimport { EnrolleeService } from './enrollees.service';\r\nimport { EnrolleeController } from './enrollees.controller';\r\nimport { EnrolleeSchema } from './enrollees.schema';\r\n\r\n@Module({\r\n  imports: [\r\n    forwardRef(() => AuthModule),\r\n    PassportModule,\r\n    MongooseModule.forFeature([\r\n      { name: 'users', schema: UserSchema },\r\n      { name: 'enrollee', schema: EnrolleeSchema },\r\n    ]),\r\n  ],\r\n  providers: [EnrolleeService, LocalStrategy, JwtStrategy],\r\n  exports: [EnrolleeService],\r\n  controllers: [EnrolleeController],\r\n})\r\nexport class EnrolleeModule {}\r\n","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\r\nimport { Document } from 'mongoose';\r\n\r\nexport type EnrolleeDocument = Enrollee & Document;\r\n\r\n@Schema()\r\nexport class Enrollee {\r\n  @Prop()\r\n  first_name: string;\r\n  @Prop()\r\n  middle_name: string;\r\n  @Prop()\r\n  last_name: string;\r\n  @Prop()\r\n  email: string;\r\n  @Prop()\r\n  password: string;\r\n  @Prop()\r\n  address: string;\r\n  @Prop()\r\n  phone_number: string;\r\n  @Prop()\r\n  lrn: string;\r\n  @Prop()\r\n  strand: string;\r\n  // base64 images\r\n  @Prop()\r\n  birth_certificate: string;\r\n  @Prop()\r\n  picture_2x2: string;\r\n  @Prop()\r\n  grade_10_card: string;\r\n  @Prop()\r\n  good_moral: string;\r\n}\r\n\r\nexport const EnrolleeSchema = SchemaFactory.createForClass(Enrollee);\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectModel } from '@nestjs/mongoose';\r\nimport { Model, Types } from 'mongoose';\r\nimport { EnrolleeDocument } from './enrollees.schema';\r\nimport * as bcrypt from 'bcrypt';\r\n\r\n@Injectable()\r\nexport class EnrolleeService {\r\n  constructor(\r\n    @InjectModel('enrollee')\r\n    private enrolleeModel: Model<EnrolleeDocument>\r\n  ) {}\r\n\r\n  async getEnrollees() {\r\n    return await this.enrolleeModel.find();\r\n  }\r\n\r\n  async createEnrollee(body) {\r\n    const {\r\n      first_name,\r\n      middle_name,\r\n      last_name,\r\n      email,\r\n      password,\r\n      c_password,\r\n      address,\r\n      phone_number,\r\n      birth_certificate,\r\n      picture_2x2,\r\n      grade_10_card,\r\n      lrn,\r\n      good_moral,\r\n      strand,\r\n    } = body;\r\n\r\n    let hashPass;\r\n\r\n    if (password === c_password) hashPass = await bcrypt.hash(password, 10);\r\n\r\n    return await this.enrolleeModel.create({\r\n      first_name: first_name,\r\n      middle_name: middle_name,\r\n      last_name: last_name,\r\n      email: email,\r\n      password: hashPass,\r\n      address: address,\r\n      phone_number: phone_number,\r\n      birth_certificate: birth_certificate,\r\n      picture_2x2: picture_2x2,\r\n      grade_10_card: grade_10_card,\r\n      lrn: lrn,\r\n      good_moral: good_moral,\r\n      strand: strand,\r\n    });\r\n  }\r\n\r\n  async getEnrolleeById(id) {\r\n    return await this.enrolleeModel.findById({ _id: id });\r\n  }\r\n}\r\n","export enum Role {\r\n  User = 'user',\r\n  Admin = 'admin',\r\n  Faculty = 'faculty',\r\n  Student = 'student',\r\n}\r\n","import { SetMetadata } from '@nestjs/common';\r\nimport { Role } from './role.enum';\r\n\r\nexport const ROLES_KEY = 'roles';\r\nexport const Roles = (...roles: Role[]) => SetMetadata(ROLES_KEY, roles);\r\n","import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\r\nimport { Reflector } from '@nestjs/core';\r\nimport { Role } from './role.enum';\r\nimport { ROLES_KEY } from './roles.decorator';\r\n\r\n@Injectable()\r\nexport class RolesGuard implements CanActivate {\r\n  constructor(private reflector: Reflector) {}\r\n\r\n  canActivate(context: ExecutionContext): boolean {\r\n    const requiredRoles = this.reflector.getAllAndOverride<Role[]>(ROLES_KEY, [\r\n      context.getHandler(),\r\n      context.getClass(),\r\n    ]);\r\n    if (!requiredRoles) {\r\n      return true;\r\n    }\r\n    const { user } = context.switchToHttp().getRequest();\r\n    return requiredRoles.some((role) => user.role[0]?.includes(role));\r\n  }\r\n}\r\n","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\r\nimport { Document } from 'mongoose';\r\nimport { Section } from './section.schema';\r\n\r\nexport type FacultyDocument = Faculty & Document;\r\n\r\n@Schema()\r\nexport class Faculty {\r\n  @Prop()\r\n  subjects_id: string[];\r\n  @Prop()\r\n  section: Section;\r\n}\r\n\r\nexport const FacultySchema = SchemaFactory.createForClass(Faculty);\r\n","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\r\nimport { Document } from 'mongoose';\r\n\r\nexport type ProfileDocument = Profile & Document;\r\n\r\n@Schema()\r\nexport class Profile {\r\n  @Prop()\r\n  address: string;\r\n  @Prop()\r\n  phone_number: string;\r\n  @Prop()\r\n  birth_certificate: string;\r\n  @Prop()\r\n  picture_2x2: string;\r\n  @Prop()\r\n  grade_10_card: string;\r\n  @Prop()\r\n  lrn: string;\r\n  @Prop()\r\n  good_moral: string;\r\n}\r\n\r\nexport const ProfileSchema = SchemaFactory.createForClass(Profile);\r\n","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\r\nimport { Document, Schema as MongooseSchema } from 'mongoose';\r\n\r\nimport { Subject } from './subject.schema';\r\n\r\nexport type SectionDocument = Section & Document;\r\n\r\n@Schema()\r\nexport class Section {\r\n  @Prop()\r\n  _id: MongooseSchema.Types.ObjectId;\r\n  @Prop()\r\n  section_name: string;\r\n  @Prop()\r\n  teacher_id: string;\r\n  @Prop()\r\n  students_id: string[];\r\n  @Prop()\r\n  school_year: string;\r\n  @Prop()\r\n  subjects: Subject[];\r\n}\r\n\r\nexport const SectionSchema = SchemaFactory.createForClass(Section);\r\n","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\r\nimport { Document } from 'mongoose';\r\nimport { ReportCard } from './reportCard.schema';\r\n\r\nexport type StudentDocument = Student & Document;\r\n\r\n@Schema()\r\nexport class Student {\r\n  @Prop()\r\n  strand: string;\r\n  @Prop()\r\n  report_card: ReportCard[];\r\n}\r\n\r\nexport const StudentSchema = SchemaFactory.createForClass(Student);\r\n","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\r\nimport { Document, Schema as MongooseSchema } from 'mongoose';\r\n\r\nexport type SubjectDocument = Subject & Document;\r\n\r\n@Schema()\r\nexport class Subject {\r\n  @Prop()\r\n  _id: MongooseSchema.Types.ObjectId;\r\n  @Prop()\r\n  subject_name: string;\r\n  @Prop()\r\n  strand: string;\r\n  @Prop()\r\n  time_in: Date;\r\n  @Prop()\r\n  time_out: Date;\r\n}\r\n\r\nexport const SubjectSchema = SchemaFactory.createForClass(Subject);\r\n","import {\r\n  Body,\r\n  Post,\r\n  Controller,\r\n  UseGuards,\r\n  Param,\r\n  Get,\r\n  Patch,\r\n} from '@nestjs/common';\r\nimport { JwtAuthGuard } from '../auth/jwt-auth.guard';\r\nimport { Roles } from '../roles/roles.decorator';\r\nimport { Role } from '../roles/role.enum';\r\nimport { RolesGuard } from '../roles/roles.guard';\r\nimport { SectionService } from './section.service';\r\n\r\n@Controller('section')\r\nexport class SectionController {\r\n  constructor(private sectionService: SectionService) {}\r\n\r\n  @UseGuards(JwtAuthGuard, RolesGuard)\r\n  @Roles(Role.Admin, Role.Faculty)\r\n  @Get('/parsed/:id')\r\n  getParsedSection(@Param() param) {\r\n    return this.sectionService.getParsedSection(param.id);\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard, RolesGuard)\r\n  @Roles(Role.Admin, Role.Faculty)\r\n  @Get('/:id')\r\n  getSection(@Param() param) {\r\n    return this.sectionService.getSection(param.id);\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard, RolesGuard)\r\n  @Roles(Role.Admin, Role.Faculty)\r\n  @Patch('/:section_id/:subject_id')\r\n  addSubjectToSection(@Param() param) {\r\n    return this.sectionService.addSubjectToSection(\r\n      param.section_id,\r\n      param.subject_id\r\n    );\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard, RolesGuard)\r\n  @Roles(Role.Admin, Role.Faculty)\r\n  @Post('create')\r\n  createSection(@Body() body) {\r\n    return this.sectionService.createSection(body);\r\n  }\r\n}\r\n","import { Module, forwardRef } from '@nestjs/common';\r\nimport { LocalStrategy } from '../auth/local.strategy';\r\nimport { JwtStrategy } from '../auth/jwt.strategy';\r\nimport { AuthModule } from '../auth/auth.module';\r\nimport { PassportModule } from '@nestjs/passport';\r\nimport { MongooseModule } from '@nestjs/mongoose';\r\nimport { SectionSchema } from '../schema/section.schema';\r\nimport { SectionService } from './section.service';\r\nimport { SectionController } from './section.controller';\r\nimport { UsersModule } from '../users/users.module';\r\nimport { UserSchema } from '../users/user.schema';\r\nimport { SubjectModule } from '../subjects/subject.module';\r\nimport { SubjectSchema } from '../schema/subject.schema';\r\n\r\n@Module({\r\n  imports: [\r\n    UsersModule,\r\n    SubjectModule,\r\n    forwardRef(() => AuthModule),\r\n    PassportModule,\r\n    MongooseModule.forFeature([\r\n      { name: 'users', schema: UserSchema },\r\n      { name: 'section', schema: SectionSchema },\r\n      { name: 'subjects', schema: SubjectSchema },\r\n    ]),\r\n  ],\r\n  providers: [SectionService, LocalStrategy, JwtStrategy],\r\n  exports: [SectionService],\r\n  controllers: [SectionController],\r\n})\r\nexport class SectionModule {}\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectModel } from '@nestjs/mongoose';\r\nimport { Model, Types } from 'mongoose';\r\nimport { SectionDocument } from '../schema/section.schema';\r\nimport { SubjectService } from '../subjects/subject.service';\r\nimport { UsersService } from '../users/users.service';\r\n\r\n@Injectable()\r\nexport class SectionService {\r\n  constructor(\r\n    @InjectModel('section')\r\n    private sectionModel: Model<SectionDocument>,\r\n    private readonly usersService: UsersService,\r\n    private readonly subjectService: SubjectService\r\n  ) {}\r\n\r\n  async getSection(id) {\r\n    return await this.sectionModel.findById(id);\r\n  }\r\n\r\n  async createSection(body) {\r\n    const students = await this.usersService.getRole(body.role);\r\n    //const faculty = await this.usersService.getUserById(body.teacher_id);\r\n\r\n    const classStudents = [];\r\n\r\n    body.students_id.map((student) => {\r\n      students.map((v) => {\r\n        if (v._id.toString() === student) {\r\n          classStudents.push(v);\r\n        }\r\n      });\r\n    });\r\n\r\n    const parsedSection = await this.sectionModel.create({\r\n      _id: new Types.ObjectId(),\r\n      section_name: body.section_name,\r\n      teacher_id: body.teacher_id,\r\n      students_id: body.students_id,\r\n      school_year: body.school_year,\r\n    });\r\n\r\n    if (parsedSection) {\r\n      body.students_id.map((id) =>\r\n        this.usersService.assignSectionToUser('student', parsedSection, id)\r\n      );\r\n      this.usersService.assignSectionToUser(\r\n        'faculty',\r\n        parsedSection,\r\n        body.teacher_id\r\n      );\r\n    }\r\n\r\n    return parsedSection;\r\n  }\r\n\r\n  async addSubjectToSection(section_id, subject_id) {\r\n    const subject = await this.subjectService.getSubject(subject_id);\r\n    const section = await this.getSection(section_id);\r\n    section.students_id.map(async (id) => {\r\n      await this.usersService.addSubject(id, subject);\r\n    });\r\n\r\n    await this.sectionModel.findByIdAndUpdate(\r\n      { _id: section_id },\r\n      {\r\n        $push: {\r\n          subjects: subject,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  async getParsedSection(id) {\r\n    const originSection = await this.getSection(id);\r\n    const parsedSection = Object.entries(originSection)[2][1];\r\n    const faculty = await this.usersService.getUserById(\r\n      originSection.teacher_id\r\n    );\r\n    const promisedStudents = [];\r\n    await originSection.students_id.map((id) =>\r\n      promisedStudents.push(this.usersService.getUserById(id))\r\n    );\r\n\r\n    delete parsedSection.students_id;\r\n    delete parsedSection.teacher_id;\r\n\r\n    parsedSection['teacher'] = faculty;\r\n\r\n    return Promise.all(promisedStudents).then((students) => {\r\n      parsedSection['students'] = students;\r\n      return parsedSection;\r\n    });\r\n  }\r\n\r\n  //   async getAllClass(): Promise<Class> {\r\n  //     const Class = await this.sectionModel.find({});\r\n\r\n  //     return Class;\r\n  //   }\r\n}\r\n","import { Body, Post, Controller, Param, Get } from '@nestjs/common';\r\n//* ^^ */ import { UseGuards } from '@nestjs/common';\r\n// import { JwtAuthGuard } from '../auth/jwt-auth.guard';\r\n// import { Roles } from '../roles/roles.decorator';\r\n// import { Role } from '../roles/role.enum';\r\n// import { RolesGuard } from '../roles/roles.guard';\r\nimport { SubjectService } from './subject.service';\r\n\r\n@Controller('subject')\r\nexport class SubjectController {\r\n  constructor(private subjectService: SubjectService) {}\r\n\r\n  // @UseGuards(JwtAuthGuard, RolesGuard)\r\n  // @Roles(Role.Admin, Role.Faculty)\r\n  @Get('/:id')\r\n  getSubject(@Param() param) {\r\n    return this.subjectService.getSubject(param.id);\r\n  }\r\n\r\n  // @UseGuards(JwtAuthGuard, RolesGuard)\r\n  // @Roles(Role.Admin, Role.Faculty)\r\n  @Post('create')\r\n  createSubject(@Body() body) {\r\n    return this.subjectService.createSubject(body);\r\n  }\r\n}\r\n","import { Module, forwardRef } from '@nestjs/common';\r\nimport { LocalStrategy } from '../auth/local.strategy';\r\nimport { JwtStrategy } from '../auth/jwt.strategy';\r\nimport { AuthModule } from '../auth/auth.module';\r\nimport { PassportModule } from '@nestjs/passport';\r\nimport { MongooseModule } from '@nestjs/mongoose';\r\nimport { SubjectService } from './subject.service';\r\nimport { SubjectController } from './subject.controller';\r\nimport { UserSchema } from '../users/user.schema';\r\nimport { UsersModule } from '../users/users.module';\r\nimport { SubjectSchema } from '../schema/subject.schema';\r\n\r\n@Module({\r\n  imports: [\r\n    UsersModule,\r\n    forwardRef(() => AuthModule),\r\n    PassportModule,\r\n    MongooseModule.forFeature([\r\n      { name: 'users', schema: UserSchema },\r\n      { name: 'subject', schema: SubjectSchema },\r\n    ]),\r\n  ],\r\n  providers: [SubjectService, LocalStrategy, JwtStrategy],\r\n  exports: [SubjectService],\r\n  controllers: [SubjectController],\r\n})\r\nexport class SubjectModule {}\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectModel } from '@nestjs/mongoose';\r\nimport { Model, Types } from 'mongoose';\r\nimport { SubjectDocument } from '../schema/subject.schema';\r\n\r\n@Injectable()\r\nexport class SubjectService {\r\n  constructor(\r\n    @InjectModel('subject')\r\n    private subjectModel: Model<SubjectDocument>\r\n  ) {}\r\n\r\n  async createSubject(body) {\r\n    const newSubject = await this.subjectModel.create({\r\n      _id: new Types.ObjectId(),\r\n      subject_name: body.subject_name,\r\n      strand: body.strand,\r\n      // time_in: body.time_in,\r\n      // time_out: body.time_out,\r\n    });\r\n\r\n    return newSubject;\r\n  }\r\n\r\n  async getSubject(id) {\r\n    return await this.subjectModel.findById(id);\r\n  }\r\n\r\n  //   async getAllClass(): Promise<Class> {\r\n  //     const Class = await this.subjectModel.find({});\r\n  //     return Class;\r\n  //   }\r\n}\r\n","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\r\nimport { Document, Schema as MongooseSchema } from 'mongoose';\r\nimport { Role } from '../roles/role.enum';\r\nimport { Faculty } from '../schema/faculty.schema';\r\nimport { Student } from '../schema/student.schema';\r\nimport { Profile } from '../schema/profile';\r\nexport type UserDocument = User & Document;\r\n\r\n@Schema({ timestamps: true })\r\nexport class User {\r\n  @Prop()\r\n  _id: MongooseSchema.Types.ObjectId;\r\n  @Prop({ required: true })\r\n  last_name: string;\r\n  @Prop({ required: true })\r\n  first_name: string;\r\n  @Prop({ required: true })\r\n  middle_name: string;\r\n  @Prop({ required: true })\r\n  email: string;\r\n  @Prop({ required: true })\r\n  password: string;\r\n  @Prop({ required: true })\r\n  role: Role[];\r\n  @Prop()\r\n  admin: [];\r\n  @Prop()\r\n  faculty: Faculty;\r\n  @Prop()\r\n  student: Student;\r\n  @Prop()\r\n  profile: Profile;\r\n  @Prop()\r\n  section_id: string;\r\n}\r\n\r\nexport const UserSchema = SchemaFactory.createForClass(User);\r\n","import {\r\n  Body,\r\n  Post,\r\n  Controller,\r\n  Get,\r\n  Request,\r\n  UseGuards,\r\n  Param,\r\n  Put,\r\n} from '@nestjs/common';\r\nimport { JwtAuthGuard } from '../auth/jwt-auth.guard';\r\nimport { Roles } from '../roles/roles.decorator';\r\nimport { Role } from '../roles/role.enum';\r\nimport { RolesGuard } from '../roles/roles.guard';\r\nimport { UsersService } from './users.service';\r\n\r\n@Controller('user')\r\nexport class UsersController {\r\n  constructor(private usersService: UsersService) {}\r\n\r\n  @UseGuards(JwtAuthGuard, RolesGuard)\r\n  @Roles(Role.Admin)\r\n  @Get('profile')\r\n  getProfile(@Request() req) {\r\n    return req.user;\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard, RolesGuard)\r\n  @Roles(Role.Admin)\r\n  @Post('register')\r\n  createUser(@Body() body) {\r\n    return this.usersService.createUser(body);\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard, RolesGuard)\r\n  @Roles(Role.Admin)\r\n  @Get('listStrand')\r\n  listStudentStrand(@Body() body) {\r\n    return this.usersService.listStudentStrand(body);\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard, RolesGuard)\r\n  @Roles(Role.Admin, Role.Faculty)\r\n  @Get('role')\r\n  getRole(@Body() body) {\r\n    return this.usersService.getRole(body);\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard, RolesGuard)\r\n  @Roles(Role.Admin)\r\n  @Get('/:id')\r\n  getUserById(@Param() param) {\r\n    return this.usersService.getUserById(param.id);\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard, RolesGuard)\r\n  @Roles(Role.Admin, Role.Faculty)\r\n  @Put('/:student_id/:subject_id')\r\n  updateGrade(@Param() param, @Body() body) {\r\n    return this.usersService.updateGrade(\r\n      param.student_id,\r\n      param.subject_id,\r\n      body\r\n    );\r\n  }\r\n\r\n  // @UseGuards(JwtAuthGuard, RolesGuard)\r\n  // @Roles(Role.Admin)\r\n  @Post('/etos/:id')\r\n  convertEtoS(@Param() param) {\r\n    return this.usersService.convertEtoS(param.id);\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard, RolesGuard)\r\n  @Roles(Role.Admin)\r\n  @Get('/')\r\n  getAllUser() {\r\n    return this.usersService.getAllUser();\r\n  }\r\n}\r\n","import { Module, forwardRef } from '@nestjs/common';\r\nimport { UsersService } from './users.service';\r\nimport { LocalStrategy } from '../auth/local.strategy';\r\nimport { JwtStrategy } from '../auth/jwt.strategy';\r\nimport { AuthModule } from '../auth/auth.module';\r\nimport { PassportModule } from '@nestjs/passport';\r\nimport { UsersController } from './users.controller';\r\nimport { MongooseModule } from '@nestjs/mongoose';\r\nimport { UserSchema } from './user.schema';\r\nimport { EnrolleeSchema } from '../enrollees/enrollees.schema';\r\nimport { EnrolleeModule } from '../enrollees/enrollees.module';\r\n\r\n@Module({\r\n  imports: [\r\n    forwardRef(() => AuthModule),\r\n    PassportModule,\r\n    MongooseModule.forFeature([\r\n      { name: 'users', schema: UserSchema },\r\n      { name: 'enrollee', schema: EnrolleeSchema },\r\n    ]),\r\n    EnrolleeModule,\r\n  ],\r\n  providers: [UsersService, LocalStrategy, JwtStrategy],\r\n  exports: [UsersService],\r\n  controllers: [UsersController],\r\n})\r\nexport class UsersModule {}\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectModel } from '@nestjs/mongoose';\r\nimport { Model, Types } from 'mongoose';\r\nimport { User, UserDocument } from './user.schema';\r\nimport * as bcrypt from 'bcrypt';\r\nimport { EnrolleeService } from '../enrollees/enrollees.service';\r\n\r\n@Injectable()\r\nexport class UsersService {\r\n  constructor(\r\n    @InjectModel('users')\r\n    private userModel: Model<UserDocument>,\r\n    private readonly enrolleeService: EnrolleeService\r\n  ) {}\r\n\r\n  async getUser(username): Promise<User> {\r\n    const user = await this.userModel.findOne({ email: username });\r\n\r\n    return user;\r\n  }\r\n\r\n  async getAllUser() {\r\n    const user = await this.userModel.find({}).select(['-password']);\r\n\r\n    return user;\r\n  }\r\n\r\n  async getUserById(id) {\r\n    const user = await this.userModel\r\n      .findById({\r\n        _id: id,\r\n      })\r\n      .select(['-password']);\r\n\r\n    return user;\r\n  }\r\n\r\n  async getRole(body) {\r\n    const userRole = await this.userModel.find({ role: body.role || body });\r\n    return userRole;\r\n  }\r\n\r\n  async assignSectionToUser(type, section, id) {\r\n    console.log('SECTION: ', section);\r\n    if (type === 'student') {\r\n      return await this.userModel.findByIdAndUpdate(id, {\r\n        section_id: section._id.toString(),\r\n      });\r\n    } else if (type === 'faculty') {\r\n      return await this.userModel.findByIdAndUpdate(id, {\r\n        section_id: section._id.toString(),\r\n      });\r\n    }\r\n  }\r\n\r\n  async addSubject(id, subject) {\r\n    return await this.userModel.findByIdAndUpdate(\r\n      { _id: id },\r\n      {\r\n        $push: {\r\n          'student.report_card': { subject: subject, final_grade: 0 },\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  async convertEtoS(id) {\r\n    const enrollee = await this.enrolleeService.getEnrolleeById(id);\r\n    const {\r\n      _id,\r\n      first_name,\r\n      middle_name,\r\n      last_name,\r\n      email,\r\n      password,\r\n      address,\r\n      phone_number,\r\n      birth_certificate,\r\n      picture_2x2,\r\n      grade_10_card,\r\n      lrn,\r\n      good_moral,\r\n      strand,\r\n    } = enrollee;\r\n\r\n    return await this.userModel.create({\r\n      _id: _id,\r\n      first_name: first_name,\r\n      middle_name: middle_name,\r\n      last_name: last_name,\r\n      email: email,\r\n      password: password,\r\n      student: { strand: strand },\r\n      profile: {\r\n        address: address,\r\n        phone_number: phone_number,\r\n        birth_certificate: birth_certificate,\r\n        picture_2x2: picture_2x2,\r\n        grade_10_card: grade_10_card,\r\n        lrn: lrn,\r\n        good_moral: good_moral,\r\n      },\r\n    });\r\n\r\n    return enrollee;\r\n  }\r\n\r\n  async updateGrade(student_id, subject_id, body) {\r\n    const user = await this.getUserById(student_id);\r\n\r\n    const subj_index = user.student.report_card.findIndex((report_card) => {\r\n      return report_card.subject._id.toString() == subject_id;\r\n    });\r\n\r\n    const patchedUser = user.student;\r\n\r\n    patchedUser.report_card[subj_index].final_grade = body.grade;\r\n\r\n    return await this.userModel.findByIdAndUpdate(\r\n      { _id: student_id },\r\n      {\r\n        student: patchedUser,\r\n      }\r\n    );\r\n  }\r\n\r\n  async createUser(body): Promise<User> {\r\n    const {\r\n      email,\r\n      password,\r\n      last_name,\r\n      first_name,\r\n      middle_name,\r\n      role,\r\n      student,\r\n      faculty,\r\n      admin,\r\n    } = body;\r\n    try {\r\n      const existUser = await this.userModel.findOne({\r\n        email: body.email,\r\n      });\r\n\r\n      if (existUser) {\r\n        console.log('User Exists');\r\n      } else {\r\n        const hashPass = await bcrypt.hash(password, 10);\r\n\r\n        const newUser = await this.userModel.create({\r\n          _id: new Types.ObjectId(),\r\n          last_name: last_name,\r\n          first_name: first_name,\r\n          middle_name: middle_name,\r\n          email: email,\r\n          password: hashPass,\r\n          role: role,\r\n          student: student,\r\n          faculty: faculty,\r\n          admin: admin,\r\n        });\r\n        return newUser;\r\n      }\r\n    } catch (err) {\r\n      console.log('error create User: ', err);\r\n    }\r\n  }\r\n\r\n  async editUser(id, body) {\r\n    const {\r\n      email,\r\n      password,\r\n      last_name,\r\n      first_name,\r\n      middle_name,\r\n      role,\r\n      student,\r\n      faculty,\r\n      admin,\r\n    } = body;\r\n\r\n    const existUser = await this.userModel.findById({ _id: id });\r\n\r\n    if (existUser) {\r\n      return 'User Exists';\r\n    }\r\n    const hashPass = await bcrypt.hash(password, 10);\r\n\r\n    const updateUser = await this.userModel.findByIdAndUpdate(\r\n      { _id: id },\r\n      {\r\n        last_name: last_name ? last_name : existUser.last_name,\r\n        first_name: first_name ? first_name : existUser.first_name,\r\n        middle_name: middle_name ? middle_name : existUser.middle_name,\r\n        email: email ? email : existUser.email,\r\n        password: password ? hashPass : existUser.password,\r\n        role: role ? role : existUser.role,\r\n        student: student ? student : existUser.student,\r\n        faculty: faculty ? faculty : existUser.faculty,\r\n        admin: admin ? admin : existUser.admin,\r\n      }\r\n    );\r\n\r\n    return updateUser;\r\n  }\r\n\r\n  async listStudentStrand(body) {\r\n    const userStrands = await this.userModel.find({\r\n      'student.strand': body.strand,\r\n    });\r\n    return userStrands;\r\n  }\r\n}\r\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/jwt\");","module.exports = require(\"@nestjs/mongoose\");","module.exports = require(\"@nestjs/passport\");","module.exports = require(\"@nestjs/serve-static\");","module.exports = require(\"bcrypt\");","module.exports = require(\"body-parser\");","module.exports = require(\"mongoose\");","module.exports = require(\"passport-jwt\");","module.exports = require(\"passport-local\");","module.exports = require(\"tslib\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\r\n * This is not a production server yet!\r\n * This is only a minimal backend to get started.\r\n */\r\n\r\nimport { Logger } from '@nestjs/common';\r\nimport { NestFactory } from '@nestjs/core';\r\n\r\nimport * as bodyParser from 'body-parser';\r\n\r\nimport { AppModule } from './app/app.module';\r\n\r\nasync function bootstrap() {\r\n  const app = await NestFactory.create(AppModule, { cors: true });\r\n  app.use(bodyParser.json({ limit: '20mb' }));\r\n  app.use(bodyParser.urlencoded({ limit: '20mb' }));\r\n  const globalPrefix = 'api';\r\n  app.setGlobalPrefix(globalPrefix);\r\n  //change origin in prod\r\n  const port = process.env.PORT || 3333;\r\n  await app.listen((process.env.PORT, parseInt('0.0.0.0')) || 3000);\r\n  Logger.log(\r\n    `🚀 Application is running on: http://localhost:${port}/${globalPrefix}`\r\n  );\r\n}\r\n\r\nbootstrap();\r\n"],"names":[],"sourceRoot":""}